variables:
  REGISTRY_URL: "registry.gitlab.tech.orange"
  PROJECT_NAMESPACE: "smartchain/demos-prototypes/llmazing-contracts"
  IMAGE_NAME_FRONTEND: "${REGISTRY_URL}/${PROJECT_NAMESPACE}/frontend_image"
  IMAGE_NAME_BACKEND: "${REGISTRY_URL}/${PROJECT_NAMESPACE}/backend_image"
  TAG: "latest"
  DOCKER_CONFIG: "/kaniko/.docker/"

docker_build_frontend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${REGISTRY_URL}\":{\"auth\":\"$(echo -n "${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --context "./frontend"
      --dockerfile "./frontend/Dockerfile"
      --destination "${IMAGE_NAME_FRONTEND}:${TAG}"

  rules:
    - if: '$CI_COMMIT_TAG || $CI_MERGE_REQUEST_ID'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /^main$/'
      when: always

docker_build_backend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${REGISTRY_URL}\":{\"auth\":\"$(echo -n "${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --context "./backend"
      --dockerfile "./backend/Dockerfile"
      --destination "${IMAGE_NAME_BACKEND}:${TAG}"
      --cache=true --compressed-caching=false --use-new-run --cleanup

#  rules:
#    - if: '$CI_COMMIT_TAG || $CI_MERGE_REQUEST_ID'
#      when: never
#    - if: '$CI_COMMIT_REF_NAME =~ /^main$/'
#      when: always

# Nouveau job sans règles
echo_variables:
  stage: build
  script:
    - echo "Exécution du job echo_variables..."
    - echo "Registry URL  ${REGISTRY_URL}"
    - echo "Project Namespace ${PROJECT_NAMESPACE}"
    - echo "Frontend Image Name ${IMAGE_NAME_FRONTEND}"
    - echo "Backend Image Name ${IMAGE_NAME_BACKEND}"
    - echo "Tag ${TAG}"